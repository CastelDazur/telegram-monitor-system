"""
example/test_run.py

–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API.

–ó–∞–ø—É—Å–∫:
    python example/test_run.py
"""

import asyncio
from app.filters import keyword_filter
from app.router import route_message

# üéØ –¢–µ—Å—Ç–æ–≤—ã–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—ç–º—É–ª—è—Ü–∏—è)
test_messages = [
    {"chat_title": "Crypto Chat", "text": "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è!"},
    {"chat_title": "Random Talk", "text": "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞"},
    {"chat_title": "Startup Hub", "text": "–ò—â–µ–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞"},
    {"chat_title": "Dev Community", "text": "–û–±—Å—É–∂–¥–∞–µ–º Python –∏ AI"},
]

# üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
keywords = ["–ø—Ä–æ–µ–∫—Ç", "–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"]

# üõ† –≠–º—É–ª—è—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ —Å–æ–±—ã—Ç–∏—è Telethon
class FakeEvent:
    def __init__(self, chat_title: str, text: str):
        self.chat = type("Chat", (), {"title": chat_title})
        self.message = type("Message", (), {"message": text})

# üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if __name__ == "__main__":
    print("\n=== üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è Telegram Monitor System ===\n")
    for msg in test_messages:
        if keyword_filter(msg["text"], keywords):
            fake_event = FakeEvent(msg["chat_title"], msg["text"])
            asyncio.run(route_message(fake_event))
        else:
            print(f"[SKIP] {msg['chat_title']}: {msg['text']}")
    print("\n=== ‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ===\n")
